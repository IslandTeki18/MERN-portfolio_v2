{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDetailsReducer, userLoginReducer } from \"./reducers/userReducers\";\nimport { projectCreateReducer, projectDeleteReducer, projectDetailsReducer, projectListReducer, projectUpdateReducer } from \"./reducers/projectReducers\";\nimport { contactCreateReducer, contactDeleteReducer, contactListReducer, contactUpdateReducer } from \"./reducers/contactReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userDetails: userDetailsReducer,\n  projectCreate: projectCreateReducer,\n  projectDelete: projectDeleteReducer,\n  projectDetails: projectDetailsReducer,\n  projectList: projectListReducer,\n  projectUpdate: projectUpdateReducer,\n  contactList: contactListReducer,\n  contactCreate: contactCreateReducer,\n  contactDelete: contactDeleteReducer,\n  contactUpdate: contactUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userDetailsReducer","userLoginReducer","projectCreateReducer","projectDeleteReducer","projectDetailsReducer","projectListReducer","projectUpdateReducer","contactCreateReducer","contactDeleteReducer","contactListReducer","contactUpdateReducer","reducer","userLogin","userDetails","projectCreate","projectDelete","projectDetails","projectList","projectUpdate","contactList","contactCreate","contactDelete","contactUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,yBAArD;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,oBAJF,QAKO,4BALP;AAOA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,SAAS,EAAEX,gBADmB;AAE9BY,EAAAA,WAAW,EAAEb,kBAFiB;AAG9Bc,EAAAA,aAAa,EAAEZ,oBAHe;AAI9Ba,EAAAA,aAAa,EAAEZ,oBAJe;AAK9Ba,EAAAA,cAAc,EAAEZ,qBALc;AAM9Ba,EAAAA,WAAW,EAAEZ,kBANiB;AAO9Ba,EAAAA,aAAa,EAAEZ,oBAPe;AAQ9Ba,EAAAA,WAAW,EAAEV,kBARiB;AAS9BW,EAAAA,aAAa,EAAEb,oBATe;AAU9Bc,EAAAA,aAAa,EAAEb,oBAVe;AAW9Bc,EAAAA,aAAa,EAAEZ;AAXe,CAAD,CAA/B;AAcA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEhB,EAAAA,SAAS,EAAE;AAAEiB,IAAAA,QAAQ,EAAEN;AAAZ;AAAb,CAArB;AAEA,MAAMO,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CACvBgB,OADuB,EAEvBiB,YAFuB,EAGvB7B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDetailsReducer, userLoginReducer } from \"./reducers/userReducers\";\nimport {\n  projectCreateReducer,\n  projectDeleteReducer,\n  projectDetailsReducer,\n  projectListReducer,\n  projectUpdateReducer,\n} from \"./reducers/projectReducers\";\nimport {\n  contactCreateReducer,\n  contactDeleteReducer,\n  contactListReducer,\n  contactUpdateReducer,\n} from \"./reducers/contactReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userDetails: userDetailsReducer,\n  projectCreate: projectCreateReducer,\n  projectDelete: projectDeleteReducer,\n  projectDetails: projectDetailsReducer,\n  projectList: projectListReducer,\n  projectUpdate: projectUpdateReducer,\n  contactList: contactListReducer,\n  contactCreate: contactCreateReducer,\n  contactDelete: contactDeleteReducer,\n  contactUpdate: contactUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}