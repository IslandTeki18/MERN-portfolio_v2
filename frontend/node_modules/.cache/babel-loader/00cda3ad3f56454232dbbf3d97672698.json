{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { adminDetailsReducer, adminLoginReducer } from \"./reducers/userReducers\";\nimport { projectCreateReducer, projectDeleteReducer, projectDetailsReducer } from \"./reducers/projectReducers\";\nconst reducer = combineReducers({\n  adminLogin: adminLoginReducer,\n  adminDetails: adminDetailsReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  adminLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","adminDetailsReducer","adminLoginReducer","projectCreateReducer","projectDeleteReducer","projectDetailsReducer","reducer","adminLogin","adminDetails","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,yBAHP;AAIA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,qBAArD,QAAkF,4BAAlF;AAEA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC9BU,EAAAA,UAAU,EAAEL,iBADkB;AAE9BM,EAAAA,YAAY,EAAEP;AAFgB,CAAD,CAA/B;AAKA,MAAMQ,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEP,EAAAA,UAAU,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AAAd,CAArB;AAEA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AAEA,MAAMkB,KAAK,GAAGrB,WAAW,CACvBU,OADuB,EAEvBQ,YAFuB,EAGvBd,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  adminDetailsReducer,\n  adminLoginReducer,\n} from \"./reducers/userReducers\";\nimport { projectCreateReducer, projectDeleteReducer, projectDetailsReducer } from \"./reducers/projectReducers\";\n\nconst reducer = combineReducers({\n  adminLogin: adminLoginReducer,\n  adminDetails: adminDetailsReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = { adminLogin: { userInfo: userInfoFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}