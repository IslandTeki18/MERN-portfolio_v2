{"ast":null,"code":"import { CONTACT_LIST_REQUEST, CONTACT_LIST_SUCCESS, CONTACT_LIST_FAIL, CONTACT_CREATE_REQUEST, CONTACT_CREATE_SUCCESS, CONTACT_CREATE_FAIL, CONTACT_DELETE_REQUEST, CONTACT_DELETE_SUCCESS, CONTACT_DELETE_FAIL, CONTACT_UPDATE_REQUEST, CONTACT_UPDATE_SUCCESS, CONTACT_UPDATE_FAIL } from \"../constants/contactConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const listContacts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/contacts\", config);\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getContactDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/contacts\", config);\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createContact = (name, phone, email, message) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CONTACT_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/contacts\", {\n      name,\n      phone,\n      email,\n      message\n    }, config);\n    dispatch({\n      type: CONTACT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteContact = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/contacts/${id}`, config);\n    dispatch({\n      type: CONTACT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: CONTACT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateContact = contact => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n    dispatch({\n      type: CONTACT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/actions/contactActions.js"],"names":["CONTACT_LIST_REQUEST","CONTACT_LIST_SUCCESS","CONTACT_LIST_FAIL","CONTACT_CREATE_REQUEST","CONTACT_CREATE_SUCCESS","CONTACT_CREATE_FAIL","CONTACT_DELETE_REQUEST","CONTACT_DELETE_SUCCESS","CONTACT_DELETE_FAIL","CONTACT_UPDATE_REQUEST","CONTACT_UPDATE_SUCCESS","CONTACT_UPDATE_FAIL","axios","logout","listContacts","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","getContactDetails","id","createContact","name","phone","email","post","deleteContact","delete","updateContact","contact","put","_id"],"mappings":"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","sourcesContent":["import {\n  CONTACT_LIST_REQUEST,\n  CONTACT_LIST_SUCCESS,\n  CONTACT_LIST_FAIL,\n  CONTACT_CREATE_REQUEST,\n  CONTACT_CREATE_SUCCESS,\n  CONTACT_CREATE_FAIL,\n  CONTACT_DELETE_REQUEST,\n  CONTACT_DELETE_SUCCESS,\n  CONTACT_DELETE_FAIL,\n  CONTACT_UPDATE_REQUEST,\n  CONTACT_UPDATE_SUCCESS,\n  CONTACT_UPDATE_FAIL,\n} from \"../constants/contactConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\nexport const listContacts = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CONTACT_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/contacts\", config);\n\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getContactDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CONTACT_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/contacts\", config);\n\n    dispatch({\n      type: CONTACT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createContact = (name, phone, email, message) => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: CONTACT_CREATE_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/contacts\",\n      {\n        name,\n        phone,\n        email,\n        message,\n      },\n      config\n    );\n\n    dispatch({\n      type: CONTACT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteContact = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CONTACT_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/contacts/${id}`, config);\n\n    dispatch({ type: CONTACT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: CONTACT_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateContact = (contact) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CONTACT_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/contacts/${contact._id}`,\n      contact,\n      config\n    );\n\n    dispatch({\n      type: CONTACT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CONTACT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}