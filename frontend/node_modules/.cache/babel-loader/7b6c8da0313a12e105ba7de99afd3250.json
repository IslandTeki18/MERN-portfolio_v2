{"ast":null,"code":"import axios from \"axios\";\nimport { PROJECT_LIST_REQUEST, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL, PROJECT_DELETE_REQUEST, PROJECT_DELETE_SUCCESS, PROJECT_DELETE_FAIL, PROJECT_UPDATE_REQUEST, PROJECT_UPDATE_SUCCESS, PROJECT_UPDATE_FAIL, PROJECT_UPDATE_RESET, PROJECT_CREATE_REQUEST, PROJECT_CREATE_SUCCESS, PROJECT_CREATE_FAIL, PROJECT_CREATE_RESET, PROJECT_DETAILS_REQUEST, PROJECT_DETAILS_SUCCESS, PROJECT_DETAILS_FAIL } from \"../constants/projectConstants\";\nexport const listProjects = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProjectDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/projects/${id}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST\n    });\n    const {\n      adminLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/projects/`);\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/actions/projectActions.js"],"names":["axios","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_DELETE_FAIL","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_RESET","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_RESET","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","listProjects","dispatch","type","data","get","payload","error","response","message","listProjectDetails","id","createProduct","getState","adminLogin","userInfo","config","headers","Authorization","user","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_LIST_FAIL,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_DELETE_FAIL,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n  PROJECT_UPDATE_RESET,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_CREATE_RESET,\n  PROJECT_DETAILS_REQUEST,\n  PROJECT_DETAILS_SUCCESS,\n  PROJECT_DETAILS_FAIL,\n} from \"../constants/projectConstants\";\n\nexport const listProjects = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST,\n    });\n    const { data } = await axios.get(`/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProjectDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST,\n    });\n    const { data } = await axios.get(`/api/projects/${id}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST,\n    });\n    const {\n      adminLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user}`\n      }\n    }\n    const { data } = await axios.post(`/api/projects/`);\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}