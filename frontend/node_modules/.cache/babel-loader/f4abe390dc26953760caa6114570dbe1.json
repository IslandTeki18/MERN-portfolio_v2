{"ast":null,"code":"import axios from \"axios\";\nimport { PROJECT_LIST_REQUEST, PROJECT_LIST_SUCCESS, PROJECT_LIST_FAIL, PROJECT_DELETE_REQUEST, PROJECT_DELETE_SUCCESS, PROJECT_DELETE_FAIL, PROJECT_UPDATE_REQUEST, PROJECT_UPDATE_SUCCESS, PROJECT_UPDATE_FAIL, PROJECT_CREATE_REQUEST, PROJECT_CREATE_SUCCESS, PROJECT_CREATE_FAIL, PROJECT_DETAILS_REQUEST, PROJECT_DETAILS_SUCCESS, PROJECT_DETAILS_FAIL } from \"../constants/projectConstants\";\nimport { logout } from \"./userActions\";\nexport const listProjects = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProjectDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/projects/${id}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createNewProject = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/projects\", {}, config);\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProject = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/projects/${id}`, config);\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProject = proj => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/projects/${product._id}`, product, config);\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/actions/projectActions.js"],"names":["axios","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_DELETE_FAIL","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","logout","listProjects","dispatch","type","data","get","payload","error","response","message","listProjectDetails","id","createNewProject","getState","userLogin","userInfo","config","headers","Authorization","token","post","deleteProject","delete","updateProject","proj","product","_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_LIST_FAIL,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_DELETE_FAIL,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_DETAILS_REQUEST,\n  PROJECT_DETAILS_SUCCESS,\n  PROJECT_DETAILS_FAIL,\n} from \"../constants/projectConstants\";\nimport { logout } from \"./userActions\";\n\nexport const listProjects = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST,\n    });\n    const { data } = await axios.get(`/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProjectDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST,\n    });\n    const { data } = await axios.get(`/api/projects/${id}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createNewProject = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/projects\", {}, config);\n\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/projects/${id}`, config);\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateProject = (proj) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.delete(\n      `/api/projects/${product._id}`,\n      product,\n      config\n    );\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}