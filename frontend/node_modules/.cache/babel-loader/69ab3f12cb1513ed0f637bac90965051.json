{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/screens/AdminContactDetailsScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\"; // list contact details from actions\n\nimport { getContactDetails } from \"../actions/contactActions\";\n\nconst AdminContactDetailsScreen = ({\n  match\n}) => {\n  _s();\n\n  const [haveRead, setHaveRead] = useState(false);\n  const dispatch = useDispatch();\n  const contactDetails = useSelector(state => state.contactDetails);\n  const {\n    loading,\n    error,\n    contact\n  } = contactDetails;\n  useEffect(() => {\n    dispatch(getContactDetails(match.params.id));\n  }, [dispatch, match]); // have read handler\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light m-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 offset-md-2 my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Contact Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"havereadSelection\",\n                children: \"Confirm Read Message?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  value: haveRead,\n                  id: \"defaultCheck1\",\n                  onChange: e => setHaveRead(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"defaultCheck1\",\n                  children: \"Yes, I have read the contact information.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminContactDetailsScreen, \"myBKHnGaG51zqYaebA/dNqrLokA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AdminContactDetailsScreen;\nexport default AdminContactDetailsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminContactDetailsScreen\");","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/screens/AdminContactDetailsScreen.js"],"names":["useState","useEffect","Link","Loader","Message","useSelector","useDispatch","getContactDetails","AdminContactDetailsScreen","match","haveRead","setHaveRead","dispatch","contactDetails","state","loading","error","contact","params","id","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// list contact details from actions\nimport { getContactDetails } from \"../actions/contactActions\";\n\nconst AdminContactDetailsScreen = ({ match }) => {\n  const [haveRead, setHaveRead] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const contactDetails = useSelector((state) => state.contactDetails);\n  const { loading, error, contact } = contactDetails;\n\n  useEffect(() => {\n    dispatch(getContactDetails(match.params.id));\n  }, [dispatch, match]);\n\n  // have read handler\n  return (\n    <>\n      <Link className=\"btn btn-light m-3\">Go Back</Link>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2 my-4\">\n            <h2>Contact Details</h2>\n            <hr />\n            {}\n            <p>\n              <em>Name:</em>\n              <br />\n            </p>\n            <p>\n              <em>Phone:</em>\n              <br />\n            </p>\n            <p>\n              <em>Email:</em>\n              <br />\n            </p>\n            <p>\n              <em>Message:</em>\n              <br />\n            </p>\n            <hr />\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"havereadSelection\">Confirm Read Message?</label>\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    value={haveRead}\n                    id=\"defaultCheck1\"\n                    onChange={(e) => setHaveRead(e.target.value)}\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                    Yes, I have read the contact information.\n                  </label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminContactDetailsScreen;\n"]},"metadata":{},"sourceType":"module"}