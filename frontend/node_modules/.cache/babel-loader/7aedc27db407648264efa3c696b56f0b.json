{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/screens/AdminContactDetailsScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContactDetails, updateContact } from \"../actions/contactActions\";\nimport { CONTACT_UPDATE_RESET } from \"../constants/contactConstants\";\n\nconst AdminContactDetailsScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const contactId = match.params.id;\n  const [haveRead, setHaveRead] = useState(false);\n  const dispatch = useDispatch();\n  const contactDetails = useSelector(state => state.contactDetails);\n  const {\n    loading,\n    error,\n    contact\n  } = contactDetails;\n  console.log(contact);\n  const contactUpdate = useSelector(state => state.contactUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = contactUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: CONTACT_UPDATE_RESET\n      });\n      history.push(\"/admin/viewcontacts\");\n    } else {\n      if (!contact.name || contact._id !== contactId) {\n        dispatch(getContactDetails(contactId));\n      } else {\n        setHaveRead(contact.haveRead);\n      }\n    }\n  }, [dispatch, history, successUpdate, contact, contactId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateContact({\n      _id: contactId,\n      haveRead\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light m-3\",\n      to: \"/admin/viewcontacts\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 offset-md-2 my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Contact Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 31\n          }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), contact.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), contact.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), contact.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), contact.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitHandler,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"havereadSelection\",\n                  children: \"Confirm Read Message?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    checked: haveRead,\n                    id: \"haveReadCheck\",\n                    onChange: e => setHaveRead(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label mb-3\",\n                    htmlFor: \"haveReadCheck\",\n                    children: \"Yes, I have read the contact information.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminContactDetailsScreen, \"Y1yZCc++5w07zGbJEQuMK7OMBs4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AdminContactDetailsScreen;\nexport default AdminContactDetailsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminContactDetailsScreen\");","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/screens/AdminContactDetailsScreen.js"],"names":["useState","useEffect","Link","Loader","Message","useSelector","useDispatch","getContactDetails","updateContact","CONTACT_UPDATE_RESET","AdminContactDetailsScreen","match","history","contactId","params","id","haveRead","setHaveRead","dispatch","contactDetails","state","loading","error","contact","console","log","contactUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","name","_id","submitHandler","e","preventDefault","phone","email","message","target","checked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContactDetails, updateContact } from \"../actions/contactActions\";\nimport { CONTACT_UPDATE_RESET } from \"../constants/contactConstants\";\n\nconst AdminContactDetailsScreen = ({ match, history }) => {\n  const contactId = match.params.id;\n\n  const [haveRead, setHaveRead] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const contactDetails = useSelector((state) => state.contactDetails);\n  const { loading, error, contact } = contactDetails;\n  console.log(contact);\n\n  const contactUpdate = useSelector((state) => state.contactUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = contactUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CONTACT_UPDATE_RESET });\n      history.push(\"/admin/viewcontacts\");\n    } else {\n      if (!contact.name || contact._id !== contactId) {\n        dispatch(getContactDetails(contactId));\n      } else {\n        setHaveRead(contact.haveRead);\n      }\n    }\n  }, [dispatch, history, successUpdate, contact, contactId]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateContact({ _id: contactId, haveRead }));\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light m-3\" to=\"/admin/viewcontacts\">\n        Go Back\n      </Link>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2 my-4\">\n            <h2>Contact Details</h2>\n            <div className=\"mr-auto\">\n              <button className=\"btn btn-link\">Delete</button>\n            </div>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n            {loading ? (\n              <Loader />\n            ) : error ? (\n              <Message>{error}</Message>\n            ) : (\n              <>\n                <hr />\n                <p>\n                  <em>Name: </em>\n                  {contact.name}\n                </p>\n                <p>\n                  <em>Phone:</em>\n                  <br />\n                  {contact.phone}\n                </p>\n                <p>\n                  <em>Email: </em>\n                  {contact.email}\n                </p>\n                <p>\n                  <em>Message:</em>\n                  <br />\n                  {contact.message}\n                </p>\n                <hr />\n                <form onSubmit={submitHandler}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"havereadSelection\">\n                      Confirm Read Message?\n                    </label>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={haveRead}\n                        id=\"haveReadCheck\"\n                        onChange={(e) => setHaveRead(e.target.checked)}\n                      />\n                      <label\n                        className=\"form-check-label mb-3\"\n                        htmlFor=\"haveReadCheck\"\n                      >\n                        Yes, I have read the contact information.\n                      </label>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Update\n                    </button>\n                  </div>\n                </form>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminContactDetailsScreen;\n"]},"metadata":{},"sourceType":"module"}