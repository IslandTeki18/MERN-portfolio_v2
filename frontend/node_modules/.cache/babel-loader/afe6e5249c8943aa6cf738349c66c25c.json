{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{userDetailsReducer,userLoginReducer}from\"./reducers/userReducers\";import{projectCreateReducer,projectDeleteReducer,projectDetailsReducer,projectListReducer,projectUpdateReducer}from\"./reducers/projectReducers\";import{contactCreateReducer,contactDeleteReducer,contactListReducer,contactUpdateReducer,contactDetailsReducer}from\"./reducers/contactReducers\";var reducer=combineReducers({userLogin:userLoginReducer,userDetails:userDetailsReducer,projectCreate:projectCreateReducer,projectDelete:projectDeleteReducer,projectDetails:projectDetailsReducer,projectList:projectListReducer,projectUpdate:projectUpdateReducer,contactList:contactListReducer,contactDetails:contactDetailsReducer,contactCreate:contactCreateReducer,contactDelete:contactDeleteReducer,contactUpdate:contactUpdateReducer});var userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null;var initialState={userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/Users/landonmckell/PracticeProjects/Portfolio/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userDetailsReducer","userLoginReducer","projectCreateReducer","projectDeleteReducer","projectDetailsReducer","projectListReducer","projectUpdateReducer","contactCreateReducer","contactDeleteReducer","contactListReducer","contactUpdateReducer","contactDetailsReducer","reducer","userLogin","userDetails","projectCreate","projectDelete","projectDetails","projectList","projectUpdate","contactList","contactDetails","contactCreate","contactDelete","contactUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,kBAAT,CAA6BC,gBAA7B,KAAqD,yBAArD,CACA,OACEC,oBADF,CAEEC,oBAFF,CAGEC,qBAHF,CAIEC,kBAJF,CAKEC,oBALF,KAMO,4BANP,CAOA,OACEC,oBADF,CAEEC,oBAFF,CAGEC,kBAHF,CAIEC,oBAJF,CAKEC,qBALF,KAMO,4BANP,CAQA,GAAMC,CAAAA,OAAO,CAAGhB,eAAe,CAAC,CAC9BiB,SAAS,CAAEZ,gBADmB,CAE9Ba,WAAW,CAAEd,kBAFiB,CAG9Be,aAAa,CAAEb,oBAHe,CAI9Bc,aAAa,CAAEb,oBAJe,CAK9Bc,cAAc,CAAEb,qBALc,CAM9Bc,WAAW,CAAEb,kBANiB,CAO9Bc,aAAa,CAAEb,oBAPe,CAQ9Bc,WAAW,CAAEX,kBARiB,CAS9BY,cAAc,CAAEV,qBATc,CAU9BW,aAAa,CAAEf,oBAVe,CAW9BgB,aAAa,CAAEf,oBAXe,CAY9BgB,aAAa,CAAEd,oBAZe,CAAD,CAA/B,CAeA,GAAMe,CAAAA,mBAAmB,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CAExB,IAFJ,CAIA,GAAMG,CAAAA,YAAY,CAAG,CAAEjB,SAAS,CAAE,CAAEkB,QAAQ,CAAEN,mBAAZ,CAAb,CAArB,CAEA,GAAMO,CAAAA,UAAU,CAAG,CAAClC,KAAD,CAAnB,CAEA,GAAMmC,CAAAA,KAAK,CAAGtC,WAAW,CACvBiB,OADuB,CAEvBkB,YAFuB,CAGvB/B,mBAAmB,CAACF,eAAe,MAAf,QAAmBmC,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDetailsReducer, userLoginReducer } from \"./reducers/userReducers\";\nimport {\n  projectCreateReducer,\n  projectDeleteReducer,\n  projectDetailsReducer,\n  projectListReducer,\n  projectUpdateReducer,\n} from \"./reducers/projectReducers\";\nimport {\n  contactCreateReducer,\n  contactDeleteReducer,\n  contactListReducer,\n  contactUpdateReducer,\n  contactDetailsReducer,\n} from \"./reducers/contactReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userDetails: userDetailsReducer,\n  projectCreate: projectCreateReducer,\n  projectDelete: projectDeleteReducer,\n  projectDetails: projectDetailsReducer,\n  projectList: projectListReducer,\n  projectUpdate: projectUpdateReducer,\n  contactList: contactListReducer,\n  contactDetails: contactDetailsReducer,\n  contactCreate: contactCreateReducer,\n  contactDelete: contactDeleteReducer,\n  contactUpdate: contactUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}